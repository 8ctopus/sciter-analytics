<html
    window-width="800dip"
    window-height="800dip"
>
<head>
<title>sciter analytics demo</title>
<style>

@import url(node_modules/sciter-logger/src/logger.css);
@import url(node_modules/sciter-pagecontrol/src/pagecontrol.css);
@import url(css/themes/default.css);

div.vbox {
    width: 200dip;
}

</style>
<script type="module">

import {uuid} from "@sciter";
import Logger from "node_modules/sciter-logger/src/logger.js";
import * as Utils from "node_modules/sciter-utils/src/utils.js";
import Dialogs from "node_modules/sciter-dialogs/src/dialogs.js";
import Analytics from "src/analytics.js";

// initialize logger
Logger.init({
    file: URL.toPath(__DIR__ + "test.log"),
    clear: true,
});

// attach logger to console
Logger.attach();

// capture unhandled exceptions
Logger.capture();

document.on("ready", function() {
    // subscribe to logger messages
    Logger.plaintext(document.$("plaintext#logger"));

    // log sciter version
    console.debug(Utils.sciterInfo());

    // initialize
    Analytics.init({
        log: true,
        endpoint: "https://api2.amplitude.com/2/httpapi",
        apikey: "0fad02b65a75f270c199db6b920fbf92",
        user_id: "123456",
        event_properties: {appName: "Sciter analytics", appRelease: "debug"}
        //endpoint: "http://localhost/index.php",
        //endpoint: "https://httpbin.org/post",
    });

    //set device info
    Analytics.device({device_model : "iPhone 11", platform: "iOS", os_version: "15,4", device_id: "6666ABC"});


    // add more environmental variables
/**
    Analytics.env({
        api_key: "0fad02b65a75f270c199db6b920fbf92",
        name: "analytics",
        version: "0.0.1",
        uuid: uuid(),
    });
*/

    Analytics.event("app started");

 //   Analytics.watch("focus", "plaintext", "plaintext focused");
 //   Analytics.watch("focus", undefined, "focus");

    // watch app install click
    Analytics.watch("click", "#installCTP", "Install CTP");
    Analytics.watch("click", "#installCT",  "Install CT");
    Analytics.watch("click", "#installCTBE","Install CTBE");

    // watch app close
    Analytics.watch("closerequest", undefined, "app close request");

    // add support for F5 reload
    Utils.addReloadWindow();

    // close window on escape key press
    Utils.closeWindowOnEscape(Window.this);

    // center window on screen
    Utils.centerWindow(Window.this, "screen");

    // bring window to front and set input focus
    Window.this.activate(true);
});

document.on("closerequest", function(event) {
    if (Dialogs.show("question", "Are you sure you want to quit?", "yes no cancel") !== "yes") {
        // cancel close
        event.preventDefault();
        return;
    }

    Analytics.event("app closed");
});

const headers = {
    "Content-Type": "application/json; charset=utf-8",
    "Accept": "*/*",
};

document.on("click", "button#httpbin", function() {
    const url = "https://httpbin.org/post";

    const body = JSON.stringify({
        uuid: uuid(),
        event: "button clicked",
    });

    myfetch(url, headers, body);
});

// amplitude test
document.on("click", "button#amplitude", function() {
    const url = "https://api2.amplitude.com/2/httpapi";

    const body = JSON.stringify({
        api_key: "0fad02b65a75f270c199db6b920fbf92",
        events: [{
            user_id: "datamonster@gmail.com",
            device_id: "C8F9E604-F01A-4BD9-95C6-8E5357DF265D",
            event_type: "watch_tutorial",
            version: "2.1.3",
            platform: "iOS",
            os_name: "Android",
            os_version: "4.2.2",
            device_brand: "Verizon",
            device_manufacturer: "Apple",
            device_model: "iPhone 9,1",
            carrier: "Verizon",
            country: "United States",
            region: "California",
            city: "San Francisco",
            dma: "San Francisco-Oakland-San Jose, CA",
            language: "English",
            ip: "127.0.0.1",
        }],
    });

    console.debug(body);
    myfetch(url, headers, body);
});

document.on("click", "button#mixpanel", function() {
    const url = "https://api.mixpanel.com/track";

    const body = JSON.stringify({
        event: "Signed up",
        properties: {
            distinct_id: "13793",
            token: "90063d16f08d604ae6f499ba9c689982",
        },
    });

    myfetch(url, headers, body);
});

document.on("click", function(event, element) {
    const pagecontrol = document.$("pagecontrol");

    switch (element.id) {
        case "btLogin":
            pagecontrol.showTab("tsDashboard");
            break;

        case "createAccount":
            pagecontrol.showTab("tsSignup");
            break;

        case "btSignUp":
            pagecontrol.showTab("tsLogin");
            break;

        case "forgotPassword":
            pagecontrol.showTab("tsReset");
            break;

        case "reset":
            pagecontrol.showTab("tsSent");
            break;

        case "showEvents":
            Analytics.log();
            break;

        case "sendEvents":
            Analytics.send();
            break;

        default:
    }
});

// handle show tab event
document.on("showtab", "pagecontrol", function(event) {
    console.debug(event.detail.tab);

    switch (event.detail.tab) {
        case "tsLogin":
            event = "start login";
            break;

        case "tsSignup":
            event = "start signup";
            break;

        case "tsDashboard":
            event = "end login";
            break;

        case "tsReset":
            event = "start reset";
            break;

        case "tsSent":
            event = "end reset";
            break;

        default:
    }

    //console.debug(`event - ${event}`);

    // log event
    Analytics.event(event);
});

async function myfetch(url, headers, body) {
    const response = await fetch(url, {
        method: "POST",
        cache: "no-cache",
        headers,
        body,
    });

    console.line();
    console.log(`response status - ${response.status}`);

    const json = await response.json();

    //console.log(response.text());
    console.log(json);
}

</script>
</head>
<body>
    <button #httpbin>httpbin</button>
    <button #amplitude>amplitude</button>
    <button #mixpanel>mixpanel</button>
    <button #showEvents>show events</button>
    <button #sendEvents>send events</button>
    <pagecontrol header-position="top" header-visible="true">
        <tab caption="login" #tsLogin selected>
            <div .vbox>
                <h1> Sign-in </h1>
                <label for="email"> Username or email address </label>
                <input type="text" #email />
                <div .hbox>
                    <label for="password"> Password </label><a #forgotPassword .right tabindex> Forgot password? </a>
                </div>
                <input type="password" #password />
                <button #btLogin> Login </button>
                <p>New? <a #createAccount tabindex>Create an account</a>.</p>
            </div>
        </tab>
        <tab caption="signup" #tsSignup>
            <div .vbox>
                <h1> Sign Up </h1>
                <label for="email2"> Email address </label>
                <input type="text" #email2 />
                <label for="password2"> Password </label>
                <input type="password" #password2 />
                <button #btSignUp> Sign up </button>
            </div>
        </tab>
        <tab caption="dashboard" #tsDashboard>
            <div .vbox>
                <h1> Your Dashboard </h1>
            </div>
        </tab>
        <tab caption="reset" #tsReset>
            <div .vbox>
                <h1> Reset your password </h1>
                <label for="email2"> Enter your user account's verified email address and we will send you a password reset link. </label>
                <input type="text" #email2 />
                <button #reset> Send password reset email </button>
            </div>
        </tab>
        <tab caption="sent" #tsSent>
            <div .vbox>
                <h1> Password reset email sent! </h1>
            </div>
        </tab>
        <tab caption="ctcc" #tsCTCC>
            <div .vbox>
                <a #installCTP>CopyTrans Photo</a>
                <a #installCT>CopyTrans</a>
                <a #installCTBE>CopyTrans Backup Explorer</a>
            </div>
        </tab>
    </pagecontrol>
    <plaintext #logger readonly />
</body>
</html>
